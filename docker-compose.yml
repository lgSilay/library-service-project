version: "3"
services:
    db:
        image: postgres:16-alpine
        volumes:
            - ./data/db:/var/vib/postgresql/data
        env_file:
            - .env

    app:
        build:
            context: .
        volumes:
            - ./:/app
        ports:
            - "8000:8000"
        command: >
            sh -c  "python manage.py wait_for_db &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
        env_file:
            - .env
        depends_on:
            - db

    redis:
        image: "redis:alpine"

    celery_worker:
        build:
            context: .
            dockerfile: Dockerfile
        command: "celery -A library_project worker --loglevel=info"
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            - app
            - redis
            - db
        restart: on-failure

    celery_beat:
        build:
            context: .
            dockerfile: Dockerfile
        command: "celery -A library_project beat -l info"
        volumes:
            - .:/app
        env_file:
            - .env
        restart: on-failure
        depends_on:
            - app
            - redis
            - db

#    flower:
#        build:
#            context: .
#            dockerfile: Dockerfile
#        command: /start-flower
#        volumes:
#            - .:/app
#        env_file:
#            - ./.env/.dev-sample
#        ports:
#            - 5555:5555
#        depends_on:
#            - redis
#            - db
